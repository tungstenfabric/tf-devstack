{%- if CONTROLLER_NODES is defined and CONTROLLER_NODES|length %}
{%- set CONTROLLER_NODES = CONTROLLER_NODES.split() %}
{%- endif %}

{%- if AGENT_NODES is defined and AGENT_NODES|length %}
{%- set AGENT_NODES = AGENT_NODES.split() %}
{%- endif %}

provider_config:
  bms:
    ssh_user: "{{ USER }}"
    ssh_pwd:
    ssh_private_key: "{{ HOME }}/.ssh/id_rsa"
    domainsuffix: "{{ DOMAINSUFFIX }}"

instances:
{%- for node in CONTROLLER_NODES %}
  node_{{ node | replace(".", "_") }}:
    ip: "{{ node }}"
    provider: bms
    roles:
      analytics:
      analytics_snmp:
      analytics_alarm:
      analytics_database:
      config:
      config_database:
      control:
      webui:

  {%- if node == CONTROLLER_NODES[0] and ORCHESTRATOR in ['openstack', 'all'] %}
      openstack:
  {%- endif %}

  {%- if ORCHESTRATOR in ['kubernetes', 'all'] %}
      k8s_master:
      kubemanager:
  {%- endif %}

  {%- if node in AGENT_NODES %}
      vrouter:
    {%- if ORCHESTRATOR in ['openstack', 'all'] %}
      openstack_compute:
    {%- endif %}
    {%- if ORCHESTRATOR in ['kubernetes', 'all'] %}
      k8s_node:
    {%- endif %}
  {%- endif %}
{%- endfor %}

{%- for node in AGENT_NODES %}
  {%- if node not in CONTROLLER_NODES %}
  node_{{ node | replace(".", "_") }}:
    ip: "{{ node }}"
    provider: bms
    roles:
      vrouter:
    {%- if ORCHESTRATOR in ['openstack', 'all'] %}
      openstack_compute:
    {%- endif %}
    {%- if ORCHESTRATOR in ['kubernetes', 'all'] %}
      k8s_node:
    {%- endif %}
  {%- endif %}
{%- endfor %}

global_configuration:
  CONTAINER_REGISTRY: "{{ CONTAINER_REGISTRY }}"
  REGISTRY_PRIVATE_INSECURE: True
  ENABLE_DESTROY: False
default_configuration:
  VXLAN_VN_ID_MODE: automatic
contrail_configuration:
  CONTRAIL_CONTAINER_TAG: "{{ CONTRAIL_CONTAINER_TAG }}"
  CONFIG_DATABASE_NODEMGR__DEFAULTS__minimum_diskGB: "2"
  DATABASE_NODEMGR__DEFAULTS__minimum_diskGB: "2"
  JVM_EXTRA_OPTS: "-Xms1g -Xmx2g"
  VROUTER_ENCRYPTION: FALSE
  LOG_LEVEL: SYS_DEBUG
{%- if ORCHESTRATOR in ['openstack', 'all'] %}
  CLOUD_ORCHESTRATOR: openstack
{%- else %}
  CLOUD_ORCHESTRATOR: kubernetes
{%- endif %}
  SSL_ENABLE: "{{ SSL_ENABLE }}"
  RABBITMQ_USE_SSL: "{{ SSL_ENABLE }}"
  CASSANDRA_SSL_ENABLE: "{{ SSL_ENABLE }}"
{%- if APPLY_DEFAULTS is defined and APPLY_DEFAULTS|length  %}
  APPLY_DEFAULTS: "{{ APPLY_DEFAULTS }}"
{%- endif %}

{%- if ORCHESTRATOR in ['kubernetes', 'all'] %}
  KUBERNETES_PUBLIC_FIP_POOL:
    domain: default-domain
    name: __fip_pool_public__
    network: __public__
    project: k8s-default
{%- endif %}

{%- if ORCHESTRATOR in ['openstack', 'all'] %}
  OPENSTACK_VERSION: "{{ OPENSTACK_VERSION }}"
  AUTH_MODE: keystone
  KEYSTONE_AUTH_URL_VERSION: /v3
kolla_config:
  kolla_globals:
    nova_compute_virt_type: qemu
    enable_haproxy: no
    enable_ironic: 'no'
    enable_ironic_notifications: 'no'
    openstack_service_workers: 1
    kolla_base_distro: "centos"
    nova_logging_debug: "True"
    neutron_logging_debug: "True"
    heat_logging_debug: "True"
  kolla_passwords:
    keystone_admin_password: contrail123
{%- endif %}
