machines:
{%- set controllers_count = CONTROLLER_NODES.split()|length %}
{%- if AGENT_NODES|string == NODE_IP|string %}
  {%- set all_nodes_count = controllers_count|int %}
  {%- set agent_nodes = [0] %}
{%- else %}
  {%- set controller_nodes_list = CONTROLLER_NODES.split() %}
  {%- set agent_nodes_list = AGENT_NODES.split() %}
  {%- set all_nodes_list = controller_nodes_list + agent_nodes_list %}
  {%- set all_nodes_list = all_nodes_list | unique | list %}
  {%- set all_nodes_count = all_nodes_list | length %}
  {%- set common_nodes = [] %}
  {%- for agent in agent_nodes_list %}
    {%- if agent in controller_nodes_list %}
      {{ common_nodes.append(controller_nodes_list.index(agent))|default("", True) }}
    {%- endif %}
  {%- endfor %}
  {%- set agent_nodes = common_nodes + range(controllers_count|int, all_nodes_count) | list %}
{%- endif %}
{%- set all_nodes = range(0, all_nodes_count) | list %}
{%- for i in range(0, all_nodes_count) %}
  {{ i }}:
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=8 root-disk=120G
{%- endfor %}

series: "{{ UBUNTU_SERIES }}"
services:
  glance:
    charm: "cs:{{ UBUNTU_SERIES }}/glance"
    num_units: 1
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - lxd:0
  keystone:
    charm: "cs:{{ UBUNTU_SERIES }}/keystone"
    num_units: 1
    options:
      admin-password: "{{ AUTH_PASSWORD }}"
      admin-role: "admin"
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      preferred-api-version: "3"
    expose: true
    to:
      - lxd:0

{#%- if UBUNTU_SERIES != 'focal' %#}
  # ubuntu 20.04 has only mysql-innodb-cluster charm for mysql db. but it's still ugly and buggy -
  # https://bugs.launchpad.net/charm-mysql-innodb-cluster/+bug/1882205
  # let's use percona-cluster in bionic container for now
  mysql:
    charm: "cs:bionic/percona-cluster"
    series: "bionic"
    num_units: 1
    options:
      innodb-buffer-pool-size: 256M
      max-connections: 1500
      performance-schema: true
      root-password: password
    to:
      - lxd:0
{#%- else %}
  mysql-innodb-cluster:
    charm: cs:mysql-innodb-cluster
    num_units: 3
    options:
      innodb-buffer-pool-size: 256M
      max-connections: 1500
      # performance-schema: true
      # root-password: password
    to:
    - lxd:0
    - lxd:0
    - lxd:0
{%- endif %#}

  rabbitmq-server:
    charm: "cs:{{ UBUNTU_SERIES }}/rabbitmq-server"
    num_units: 1
    to:
      - lxd:0
  neutron-api:
    charm: "cs:{{ UBUNTU_SERIES }}/neutron-api"
    num_units: 1
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      manage-neutron-plugin-legacy-mode: false
      neutron-security-groups: "true"
    expose: true
    to:
      - lxd:0
  heat:
    charm: "cs:heat"
    num_units: 1
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - lxd:0

{%- if OPENSTACK_VERSION == 'train' or OPENSTACK_VERSION == 'ussuri' %}
  placement:
    charm: "cs:{{ UBUNTU_SERIES }}/placement"
    num_units: 1
    options:
      openstack-origin: {{ OPENSTACK_ORIGIN }}
      debug: "true"
    to:
    - lxd:0
{%- endif %}
  nova-cloud-controller:
    charm: "cs:{{ UBUNTU_SERIES }}/nova-cloud-controller"
    num_units: 1
    options:
      network-manager: "Neutron"
      console-access-protocol: "novnc"
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - lxd:0
  nova-compute:
    charm: "cs:{{ UBUNTU_SERIES }}/nova-compute"
    series: "{{ UBUNTU_SERIES }}"
    num_units: {{ agent_nodes | count }}
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      virt-type: "qemu"
      enable-resize: "true"
      enable-live-migration: "true"
      migration-auth-type: "ssh"
    to: {{ agent_nodes }}
  openstack-dashboard:
    charm: "cs:{{ UBUNTU_SERIES }}/openstack-dashboard"
    num_units: 1
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - lxd:0

{#%- if UBUNTU_SERIES == 'focal' %}
  keystone-mysql-router:
    charm: cs:mysql-router
  glance-mysql-router:
    charm: cs:mysql-router
  nova-mysql-router:
    charm: cs:mysql-router
  neutron-mysql-router:
    charm: cs:mysql-router
  dashboard-mysql-router:
    charm: cs:mysql-router
  heat-mysql-router:
    charm: cs:mysql-router
{%- if OPENSTACK_VERSION == 'train' or OPENSTACK_VERSION == 'ussuri' %}
  placement-mysql-router:
    charm: cs:mysql-router
{%- endif %}
{%- endif %#}

  # misc

  ubuntu:
    charm: "cs:{{ UBUNTU_SERIES }}/ubuntu"
{%- if ORCHESTRATOR == 'hybrid' %}
    num_units: {{ all_nodes | count + 1 }}
{%- else %}
    num_units: {{ all_nodes | count }}
{%- endif %}
    to: {{ all_nodes }}
  ntp:
    charm: "cs:{{ UBUNTU_SERIES }}/ntp-41"


relations:

- [ nova-compute:amqp, rabbitmq-server:amqp ]
- [ nova-cloud-controller:identity-service, keystone:identity-service ]
- [ glance:identity-service, keystone:identity-service ]
- [ neutron-api:identity-service, keystone:identity-service ]
- [ neutron-api:amqp, rabbitmq-server:amqp ]
- [ glance:amqp, rabbitmq-server:amqp ]
- [ nova-cloud-controller:image-service, glance:image-service ]
- [ nova-compute:image-service, glance:image-service ]
- [ nova-cloud-controller:cloud-compute, nova-compute:cloud-compute ]
- [ nova-cloud-controller:amqp, rabbitmq-server:amqp ]
- [ openstack-dashboard:identity-service, keystone:identity-service ]
- [ nova-cloud-controller:neutron-api, neutron-api:neutron-api ]
- [ heat:amqp, rabbitmq-server:amqp ]
- [ heat, keystone ]
{%- if OPENSTACK_VERSION == 'train' or OPENSTACK_VERSION == 'ussuri' %}
- [ placement, keystone:identity-service ]
- [ placement, nova-cloud-controller ]
{%- endif %}

- [ ubuntu, ntp ]

{#%- if UBUNTU_SERIES != 'focal' %#}

- [ keystone:shared-db, mysql:shared-db ]
- [ glance:shared-db, mysql:shared-db ]
- [ nova-cloud-controller:shared-db, mysql:shared-db ]
- [ neutron-api:shared-db, mysql:shared-db ]
- [ openstack-dashboard:shared-db, mysql:shared-db ]
- [ heat:shared-db, mysql:shared-db ]
{%- if OPENSTACK_VERSION == 'train' or OPENSTACK_VERSION == 'ussuri' %}
- [ placement, mysql:shared-db ]
{%- endif %}

{#%- else %}

- [ keystone:shared-db, keystone-mysql-router:shared-db ]
- [ keystone-mysql-router:db-router, mysql-innodb-cluster:db-router ]
- [ glance:shared-db, glance-mysql-router:shared-db ]
- [ glance-mysql-router:db-router, mysql-innodb-cluster:db-router ]
- [ nova-cloud-controller:shared-db, nova-mysql-router:shared-db ]
- [ nova-mysql-router:db-router, mysql-innodb-cluster:db-router ]
- [ neutron-api:shared-db, neutron-mysql-router:shared-db ]
- [ neutron-mysql-router:db-router, mysql-innodb-cluster:db-router ]
- [ openstack-dashboard:shared-db, dashboard-mysql-router:shared-db ]
- [ dashboard-mysql-router:db-router, mysql-innodb-cluster:db-router ]
- [ heat:shared-db, heat-mysql-router:shared-db ]
- [ heat-mysql-router:db-router, mysql-innodb-cluster:db-router ]
{%- if OPENSTACK_VERSION == 'train' or OPENSTACK_VERSION == 'ussuri' %}
- [ placement:shared-db, placement-mysql-router:shared-db ]
- [ placement-mysql-router:db-router, mysql-innodb-cluster:db-router ]
{%- endif %}

{%- endif %#}
