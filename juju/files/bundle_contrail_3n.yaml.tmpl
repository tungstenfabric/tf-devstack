{% set JUJU_MACHINES = JUJU_MACHINES.split(',')  -%}
machines:
  0:
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=2 root-disk=60G

{%- if CONTROLLER_NUM == 3 %}
{%- for i in [1, 2] %}
  {{ i }}:
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=2 root-disk=60G
{%- set controller_nodes = [0, 1, 2] %}
{% else %}
{%- set controller_nodes = [0] %}
{%- endif %}

series: "{{ UBUNTU_SERIES }}"
services:
  contrail-controller:
    charm: "{{ JUJU_REPO }}/contrail-controller"
    series: "{{ UBUNTU_SERIES }}"
    num_units: "{{ CONTROLLER_NUM }}"
    options:
      log-level: "SYS_DEBUG"
      min-cluster-size: "{{ CONTROLLER_NUM }}"
{%- if ORCHESTRATOR == 'openstack' %}
      auth-mode: "rbac"
{%- else %}
      auth-mode: "no-auth"
{%- endif %}
      cassandra-minimum-diskgb: "4"
      cassandra-jvm-extra-opts: "-Xms1g -Xmx2g"
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- if DATA_NETWORK %}
      data-network: "{{ DATA_NETWORK }}"
{%- endif %}
    expose: true
    to: {{ controller_nodes }}
  contrail-analyticsdb:
    charm: "{{ JUJU_REPO }}/contrail-analyticsdb"
    series: "{{ UBUNTU_SERIES }}"
    num_units: "{{ CONTROLLER_NUM }}"
    options:
      log-level: "SYS_DEBUG"
      cassandra-minimum-diskgb: "4"
      cassandra-jvm-extra-opts: "-Xms1g -Xmx2g"
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
      min-cluster-size: "{{ CONTROLLER_NUM }}"
    expose: true
    to: {{ controller_nodes }}
  contrail-analytics:
    charm: "{{ JUJU_REPO }}/contrail-analytics"
    series: "{{ UBUNTU_SERIES }}"
    num_units: "{{ CONTROLLER_NUM }}"
    options:
      log-level: "SYS_DEBUG"
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
      min-cluster-size: "{{ CONTROLLER_NUM }}"
    expose: true
    to: {{ controller_nodes }}
  contrail-agent:
    charm: "{{ JUJU_REPO }}/contrail-agent"
    series: "{{ UBUNTU_SERIES }}"
    options:
      log-level: "SYS_DEBUG"
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- if ORCHESTRATOR == 'openstack' %}
  contrail-keystone-auth:
    charm: "{{ JUJU_REPO }}/contrail-keystone-auth"
    series: "{{ UBUNTU_SERIES }}"
    num_units: 1
    to:
      - "0"
  contrail-openstack:
    charm: "{{ JUJU_REPO }}/contrail-openstack"
    series: "{{ UBUNTU_SERIES }}"
    options:
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- elif ORCHESTRATOR == 'kubernetes' %}
  contrail-kubernetes-master:
    series: "{{ UBUNTU_SERIES }}"
    charm: "{{ JUJU_REPO }}/contrail-kubernetes-master"
    options:
      log-level: 'SYS_DEBUG'
      service_subnets: '10.96.0.0/12'
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
      cluster_name: "k8s"
      public_fip_pool: "{'domain':'default-domain','project':'k8s-default','name':'__fip_pool_public__','network':'__public__'}"
      ip_fabric_forwarding: true
  contrail-kubernetes-node:
    series: "{{ UBUNTU_SERIES }}"
    charm: "{{ JUJU_REPO }}/contrail-kubernetes-node"
    options:
      log-level: 'SYS_DEBUG'
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- endif %}
{%- if SSL_ENABLE == 'true' %}
  easyrsa:
    # this must be one in HA
    charm: cs:~containers/easyrsa
    num_units: 1
    to:
      - "0"
{%- endif %}

relations:
# contrail
- [ contrail-controller, contrail-analytics ]
- [ contrail-controller, contrail-analyticsdb ]
- [ contrail-analytics, contrail-analyticsdb ]
- [ contrail-agent, contrail-controller ]

{%- if SSL_ENABLE == 'true' %}
- [ easyrsa, contrail-controller ]
- [ easyrsa, contrail-analyticsdb ]
- [ easyrsa, contrail-analytics ]
- [ easyrsa, contrail-agent ]
{%- if ORCHESTRATOR == 'kubernetes' %}
- [ easyrsa, contrail-kubernetes-master ]
{%- endif %}
{%- endif %}

{%- if ORCHESTRATOR == 'openstack' %}
- [ contrail-controller, contrail-keystone-auth ]
- [ contrail-openstack, contrail-controller ]
{%- elif ORCHESTRATOR == 'kubernetes' %}
- [ contrail-kubernetes-master:contrail-controller, contrail-controller:contrail-controller ]
- [ contrail-kubernetes-master:contrail-kubernetes-config, contrail-kubernetes-node:contrail-kubernetes-config ]
{%- endif %}

