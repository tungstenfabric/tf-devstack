{%- for i in [1, 2, 3, 4] %}
  {{ i }}:
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=2 root-disk=60G
{%- endfor %}
{%- set all_nodes = [1, 2, 3, 4] %}
{%- set agent_nodes = [3, 4] %}
{% else %}
{%- if AGENT_NUM != 0 %}
  1:
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=2 root-disk=60G
{%- if AGENT_NUM == 1 %}
{%- set agent_nodes = [1] %}
{%- set all_nodes = [0, 1] %}
{%- endif %}
{%- endif %}
{%- if AGENT_NUM == 2 %}
  2:
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=2 root-disk=60G
{%- set agent_nodes = [1, 2] %}
{%- set all_nodes = [0, 1, 2] %}
{%- endif %}
{%- endif %}

series: "{{ UBUNTU_SERIES }}"
services:
  glance:
    charm: "cs:{{ UBUNTU_SERIES }}/glance"
    num_units: 1
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - "lxd:0"
  keystone:
    charm: "cs:{{ UBUNTU_SERIES }}/keystone"
    num_units: 1
    options:
      admin-password: "{{ AUTH_PASSWORD }}"
      admin-role: "admin"
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      preferred-api-version: "3"
    expose: true
    to:
      - "lxd:0"
  mysql:
    charm: "cs:{{ UBUNTU_SERIES }}/percona-cluster"
    num_units: 1
    options:
      root-password: "password"
      max-connections: 1500
    to:
      - "0"
  rabbitmq-server:
    charm: "cs:{{ UBUNTU_SERIES }}/rabbitmq-server"
    num_units: 1
    to:
      - "lxd:0"
  neutron-api:
    charm: "cs:{{ UBUNTU_SERIES }}/neutron-api"
    num_units: 1
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      manage-neutron-plugin-legacy-mode: false
      neutron-security-groups: "true"
    expose: true
    to:
      - "lxd:0"
  heat:
    charm: "cs:heat"
    num_units: 1
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - "lxd:0"
  nova-cloud-controller:
    charm: "cs:{{ UBUNTU_SERIES }}/nova-cloud-controller"
    num_units: 1
    options:
      network-manager: "Neutron"
      console-access-protocol: "novnc"
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - "lxd:0"
  nova-compute:
    charm: "cs:{{ UBUNTU_SERIES }}/nova-compute"
    series: "{{ UBUNTU_SERIES }}"
    num_units: {{ agent_nodes | count }}
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
      virt-type: "qemu"
      enable-resize: "true"
      enable-live-migration: "true"
      migration-auth-type: "ssh"
    to: {{ agent_nodes }}
  openstack-dashboard:
    charm: "cs:{{ UBUNTU_SERIES }}/openstack-dashboard"
    num_units: 1
    options:
      debug: "true"
      openstack-origin: "{{ OPENSTACK_ORIGIN }}"
    expose: true
    to:
      - "lxd:0"

  # misc

  ubuntu:
    charm: "cs:{{ UBUNTU_SERIES }}/ubuntu"
    num_units: {{ all_nodes | count }}
    to: {{ all_nodes }}
  ntp:
    charm: "cs:{{ UBUNTU_SERIES }}/ntp"


relations:

- [ nova-compute:amqp, rabbitmq-server:amqp ]
- [ keystone:shared-db, mysql:shared-db ]
- [ nova-cloud-controller:identity-service, keystone:identity-service ]
- [ glance:identity-service, keystone:identity-service ]
- [ neutron-api:identity-service, keystone:identity-service ]
- [ neutron-api:shared-db, mysql:shared-db ]
- [ neutron-api:amqp, rabbitmq-server:amqp ]
- [ glance:shared-db, mysql:shared-db ]
- [ glance:amqp, rabbitmq-server:amqp ]
- [ nova-cloud-controller:image-service, glance:image-service ]
- [ nova-compute:image-service, glance:image-service ]
- [ nova-cloud-controller:cloud-compute, nova-compute:cloud-compute ]
- [ nova-cloud-controller:amqp, rabbitmq-server:amqp ]
- [ openstack-dashboard:identity-service, keystone:identity-service ]
- [ nova-cloud-controller:shared-db, mysql:shared-db ]
- [ nova-cloud-controller:neutron-api, neutron-api:neutron-api ]
- [ heat:shared-db, mysql:shared-db ]
- [ heat:amqp, rabbitmq-server:amqp ]
- [ heat, keystone ]

- [ ubuntu, ntp ]
