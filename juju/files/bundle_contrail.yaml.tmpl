{%- if CLOUD == 'maas' %}
  {%- set VIRTUAL_IPS = VIRTUAL_IPS.split() %}
variables:
  contrail-controller-vip:         &contrail-controller-vip        "{{ VIRTUAL_IPS[6] }}"
{%- endif %}

{%- set controllers_count = CONTROLLER_NODES.split()|length %}
machines:
{%- for i in range(0, controllers_count|int) %}
  {{ i }}:
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=2 root-disk=60G
{%- endfor %}
{%- set controller_nodes = range(0, controllers_count|int) | list %}

series: "{{ UBUNTU_SERIES }}"
services:
  contrail-controller:
    charm: "{{ JUJU_REPO }}/contrail-controller"
    series: "{{ UBUNTU_SERIES }}"
    num_units: {{ controller_nodes | count }}
    options:
      log-level: "SYS_DEBUG"
{%- if CLOUD == 'maas' %}
      vip: *contrail-controller-vip
{%- endif %}
      min-cluster-size: {{ controller_nodes | count }}
{%- if ORCHESTRATOR == 'openstack' or ORCHESTRATOR == 'all' %}
      auth-mode: "rbac"
{%- else %}
      auth-mode: "no-auth"
{%- endif %}
      cassandra-minimum-diskgb: "4"
{%- if CLOUD == 'maas' %}
      cassandra-jvm-extra-opts: "-Xms16g -Xmx16g"
{%- else %}
      cassandra-jvm-extra-opts: "-Xms1g -Xmx2g"
{%- endif %}
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- if CONTROL_NETWORK %}
      control-network: "{{ CONTROL_NETWORK }}"
{%- endif %}
{%- if DATA_NETWORK %}
      data-network: "{{ DATA_NETWORK }}"
{%- endif %}
    expose: true
    to: {{ controller_nodes }}
  contrail-analyticsdb:
    charm: "{{ JUJU_REPO }}/contrail-analyticsdb"
    series: "{{ UBUNTU_SERIES }}"
    num_units: {{ controller_nodes | count }}
    options:
      log-level: "SYS_DEBUG"
      cassandra-minimum-diskgb: "4"
{%- if CLOUD == 'maas' %}
      cassandra-jvm-extra-opts: "-Xms16g -Xmx16g"
{%- else %}
      cassandra-jvm-extra-opts: "-Xms1g -Xmx2g"
{%- endif %}
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- if CONTROL_NETWORK %}
      control-network: "{{ CONTROL_NETWORK }}"
{%- endif %}
      min-cluster-size: {{ controller_nodes | count }}
    expose: true
    to: {{ controller_nodes }}
  contrail-analytics:
    charm: "{{ JUJU_REPO }}/contrail-analytics"
    series: "{{ UBUNTU_SERIES }}"
    num_units: {{ controller_nodes | count }}
    options:
      log-level: "SYS_DEBUG"
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- if CONTROL_NETWORK %}
      control-network: "{{ CONTROL_NETWORK }}"
{%- endif %}
      min-cluster-size: {{ controller_nodes | count }}
    expose: true
    to: {{ controller_nodes }}
  contrail-agent:
    charm: "{{ JUJU_REPO }}/contrail-agent"
    series: "{{ UBUNTU_SERIES }}"
    options:
      sriov-numvfs: "ens2f1:7"
      sriov-physical-interface: "ens2f1"
      kernel-hugepages-1g: "10"
      kernel-hugepages-2m: "2048"
      log-level: "SYS_DEBUG"
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
  contrail-agent-dpdk:
    charm: "{{ JUJU_REPO }}/contrail-agent"
    series: "{{ UBUNTU_SERIES }}"
    options:
      dpdk: True
      physical-interface: ens2f3
      dpdk-coremask: '3'
      dpdk-driver: 'vfio-pci'
      log-level: "SYS_DEBUG"
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- if ORCHESTRATOR == 'openstack' or ORCHESTRATOR == 'all' %}
  contrail-keystone-auth:
    charm: "{{ JUJU_REPO }}/contrail-keystone-auth"
    series: "{{ UBUNTU_SERIES }}"
    num_units: 1
    to:
      - "0"
  contrail-openstack:
    charm: "{{ JUJU_REPO }}/contrail-openstack"
    series: "{{ UBUNTU_SERIES }}"
    options:
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- endif %}
{%- if ORCHESTRATOR == 'kubernetes' or ORCHESTRATOR == 'all' %}
  contrail-kubernetes-master:
    series: "{{ UBUNTU_SERIES }}"
    charm: "{{ JUJU_REPO }}/contrail-kubernetes-master"
    options:
      log-level: 'SYS_DEBUG'
      service_subnets: '10.96.0.0/12'
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
      cluster_name: "k8s"
      public_fip_pool: "{'domain':'default-domain','project':'k8s-default','name':'__fip_pool_public__','network':'__public__'}"
{%- if ORCHESTRATOR != 'all' %}
      ip_fabric_forwarding: true
{%- else %}
      ip_fabric_snat: true
{%- endif %}
  contrail-kubernetes-node:
    series: "{{ UBUNTU_SERIES }}"
    charm: "{{ JUJU_REPO }}/contrail-kubernetes-node"
    options:
      log-level: 'SYS_DEBUG'
      docker-registry: "{{ CONTAINER_REGISTRY }}"
      docker-registry-insecure: true
      image-tag: "{{ CONTRAIL_CONTAINER_TAG }}"
{%- endif %}
{%- if SSL_ENABLE == 'true' %}
  easyrsa:
    # this must be one in HA
    charm: cs:~containers/easyrsa
    num_units: 1
    to:
      - "0"
{%- endif %}
{%- if CLOUD == 'maas' %}
  keepalived:
    charm: cs:~containers/keepalived
    options:
      #TODO vip for not maas
      virtual_ip: *contrail-controller-vip
  haproxy:
    charm: cs:haproxy
    num_units: 3
    expose: true
    to: {{ controller_nodes }}
    options:
      peering_mode: active-active
      ssl_cert: SELFSIGNED
{%- endif %}

relations:
# contrail
- [ contrail-controller, contrail-analytics ]
- [ contrail-controller, contrail-analyticsdb ]
- [ contrail-analytics, contrail-analyticsdb ]
- [ contrail-agent, contrail-controller ]
- [ contrail-agent-dpdk, contrail-controller ]

{%- if SSL_ENABLE == 'true' %}
- [ easyrsa, contrail-controller ]
- [ easyrsa, contrail-analyticsdb ]
- [ easyrsa, contrail-analytics ]
- [ easyrsa, contrail-agent ]
- [ easyrsa, contrail-agent-dpdk ]
{%- if ORCHESTRATOR == 'kubernetes' or ORCHESTRATOR == 'all' %}
- [ easyrsa, contrail-kubernetes-master ]
{%- endif %}
{%- endif %}

{%- if ORCHESTRATOR == 'openstack' or ORCHESTRATOR == 'all' %}
- [ contrail-controller, contrail-keystone-auth ]
- [ contrail-openstack, contrail-controller ]
{%- endif %}
{%- if ORCHESTRATOR == 'kubernetes' or ORCHESTRATOR == 'all' %}
- [ contrail-kubernetes-master:contrail-controller, contrail-controller:contrail-controller ]
- [ contrail-kubernetes-master:contrail-kubernetes-config, contrail-kubernetes-node:contrail-kubernetes-config ]
{%- endif %}
{%- if CLOUD == 'maas' %}
- [ contrail-controller:http-services, haproxy:reverseproxy ]
- [ contrail-controller:https-services, haproxy:reverseproxy ]
- [ contrail-analytics:http-services, haproxy:reverseproxy ]
- [ keepalived:juju-info, haproxy:juju-info ]
{%- endif %}
