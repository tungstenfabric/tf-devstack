machines:
{%- set controllers_count = CONTROLLER_NODES.split()|length %}
{%- if AGENT_NODES|string == NODE_IP|string %}
  {%- set all_nodes_count = controllers_count|int %}
  {%- set agent_nodes = [0] %}
{%- else %}
  {%- set controller_nodes_list = CONTROLLER_NODES.split() %}
  {%- set agent_nodes_list = AGENT_NODES.split() %}
  {%- set all_nodes_list = controller_nodes_list + agent_nodes_list %}
  {%- set all_nodes_list = all_nodes_list | unique | list %}
  {%- set all_nodes_count = all_nodes_list | length %}
  {%- set common_nodes = [] %}
  {%- for agent in agent_nodes_list %}
    {%- if agent in controller_nodes_list %}
      {{ common_nodes.append(controller_nodes_list.index(agent))|default("", True) }}
    {%- endif %}
  {%- endfor %}
  {%- set agent_nodes = common_nodes + range(controllers_count|int, all_nodes_count) | list %}
{%- endif %}
{%- set all_nodes = range(0, all_nodes_count) | list %}
{%- set controller_nodes = range(0, controllers_count|int) | list %}

{%- for i in range(0, all_nodes_count) %}
  {{ i }}:
    series: "{{ UBUNTU_SERIES }}"
    constraints: mem=15G cores=8 root-disk=120G
{%- endfor %}

series: "{{ UBUNTU_SERIES }}"
services:

  # kubernetes

  easyrsa:
    series: "{{ UBUNTU_SERIES }}"
    charm: cs:~containers/easyrsa-303
    num_units: 1
    to:
    - 0

  etcd:
    series: "{{ UBUNTU_SERIES }}"
    charm: cs:~containers/etcd-501
    num_units: {{ controller_nodes | count }}
    options:
      channel: 3.2/stable
    to: {{ controller_nodes }}

  kubernetes-master:
    series: "{{ UBUNTU_SERIES }}"
    charm: cs:~containers/kubernetes-master-827
    num_units: {{ controller_nodes | count }}
    expose: true
    options:
      enable-metrics: false
      enable-dashboard-addons: false
      channel: '1.18/stable'
      service-cidr: '10.96.0.0/12'
      snapd_refresh: 'max'
    to: {{ controller_nodes }}

  kubernetes-worker:
    series: "{{ UBUNTU_SERIES }}"
    charm: cs:~containers/kubernetes-worker-665
    num_units: {{ agent_nodes | count }}
    options:
      ingress: false
      channel: '1.18/stable'
      snapd_refresh: 'max'
    to: {{ agent_nodes }}

  docker:
    series: "{{ UBUNTU_SERIES }}"
    charm: cs:~containers/docker-59
    options:
      docker_runtime: 'custom'
      docker_runtime_repo: 'deb [arch={ARCH}] https://download.docker.com/linux/ubuntu {CODE} stable'
      docker_runtime_key_url: 'https://download.docker.com/linux/ubuntu/gpg'
      docker_runtime_package: 'docker-ce'

{%- if ENABLE_NAGIOS == 'true' %}
  nagios:
    charm: cs:nagios-40
    num_units: 1
    to:
    - "0"
    expose: true
  nrpe:
    charm: cs:nrpe-69
{%- endif %}

  # misc
  ubuntu:
    charm: "cs:{{ UBUNTU_SERIES }}/ubuntu"
{%- if ORCHESTRATOR == 'hybrid' %}
    num_units: {{ all_nodes | count + 1 }}
{%- else %}
    num_units: {{ all_nodes | count }}
{%- endif %}
    to: {{ all_nodes }}
  ntp:
    charm: "cs:{{ UBUNTU_SERIES }}/ntp-41"


relations:

- [ kubernetes-master:kube-api-endpoint, kubernetes-worker:kube-api-endpoint ]
- [ kubernetes-master:kube-control, kubernetes-worker:kube-control ]
- [ kubernetes-master:certificates, easyrsa:client ]
- [ kubernetes-master:etcd, etcd:db ]
- [ kubernetes-worker:certificates,  easyrsa:client ]
- [ etcd:certificates, easyrsa:client ]
- [ kubernetes-master:container-runtime, docker:docker]
- [ kubernetes-worker:container-runtime, docker:docker]

{%- if ENABLE_NAGIOS == 'true' %}
- [ nrpe:monitors, nagios:monitors ]
{%- endif %}

- [ ubuntu, ntp ]
